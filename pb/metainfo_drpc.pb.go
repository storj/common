// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.33
// source: metainfo.proto

package pb

import (
	bytes "bytes"
	context "context"
	errors "errors"

	jsonpb "github.com/gogo/protobuf/jsonpb"
	proto "github.com/gogo/protobuf/proto"

	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_metainfo_proto struct{}

func (drpcEncoding_File_metainfo_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_metainfo_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_metainfo_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	var buf bytes.Buffer
	err := new(jsonpb.Marshaler).Marshal(&buf, msg.(proto.Message))
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

func (drpcEncoding_File_metainfo_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return jsonpb.Unmarshal(bytes.NewReader(buf), msg.(proto.Message))
}

type DRPCMetainfoClient interface {
	DRPCConn() drpc.Conn

	CreateBucket(ctx context.Context, in *CreateBucketRequest) (*CreateBucketResponse, error)
	GetBucket(ctx context.Context, in *GetBucketRequest) (*GetBucketResponse, error)
	GetBucketLocation(ctx context.Context, in *GetBucketLocationRequest) (*GetBucketLocationResponse, error)
	GetBucketVersioning(ctx context.Context, in *GetBucketVersioningRequest) (*GetBucketVersioningResponse, error)
	SetBucketVersioning(ctx context.Context, in *SetBucketVersioningRequest) (*SetBucketVersioningResponse, error)
	GetBucketObjectLockConfiguration(ctx context.Context, in *GetBucketObjectLockConfigurationRequest) (*GetBucketObjectLockConfigurationResponse, error)
	DeleteBucket(ctx context.Context, in *DeleteBucketRequest) (*DeleteBucketResponse, error)
	ListBuckets(ctx context.Context, in *ListBucketsRequest) (*ListBucketsResponse, error)
	BeginObject(ctx context.Context, in *BeginObjectRequest) (*BeginObjectResponse, error)
	CommitObject(ctx context.Context, in *CommitObjectRequest) (*CommitObjectResponse, error)
	GetObject(ctx context.Context, in *GetObjectRequest) (*GetObjectResponse, error)
	ListObjects(ctx context.Context, in *ListObjectsRequest) (*ListObjectsResponse, error)
	BeginDeleteObject(ctx context.Context, in *BeginDeleteObjectRequest) (*BeginDeleteObjectResponse, error)
	FinishDeleteObject(ctx context.Context, in *FinishDeleteObjectRequest) (*FinishDeleteObjectResponse, error)
	GetObjectIPs(ctx context.Context, in *GetObjectIPsRequest) (*GetObjectIPsResponse, error)
	ListPendingObjectStreams(ctx context.Context, in *ListPendingObjectStreamsRequest) (*ListPendingObjectStreamsResponse, error)
	DownloadObject(ctx context.Context, in *DownloadObjectRequest) (*DownloadObjectResponse, error)
	UpdateObjectMetadata(ctx context.Context, in *UpdateObjectMetadataRequest) (*UpdateObjectMetadataResponse, error)
	GetObjectRetention(ctx context.Context, in *GetObjectRetentionRequest) (*GetObjectRetentionResponse, error)
	SetObjectRetention(ctx context.Context, in *SetObjectRetentionRequest) (*SetObjectRetentionResponse, error)
	BeginSegment(ctx context.Context, in *BeginSegmentRequest) (*BeginSegmentResponse, error)
	RetryBeginSegmentPieces(ctx context.Context, in *RetryBeginSegmentPiecesRequest) (*RetryBeginSegmentPiecesResponse, error)
	CommitSegment(ctx context.Context, in *CommitSegmentRequest) (*CommitSegmentResponse, error)
	MakeInlineSegment(ctx context.Context, in *MakeInlineSegmentRequest) (*MakeInlineSegmentResponse, error)
	BeginDeleteSegment(ctx context.Context, in *BeginDeleteSegmentRequest) (*BeginDeleteSegmentResponse, error)
	FinishDeleteSegment(ctx context.Context, in *FinishDeleteSegmentRequest) (*FinishDeleteSegmentResponse, error)
	ListSegments(ctx context.Context, in *ListSegmentsRequest) (*ListSegmentsResponse, error)
	DownloadSegment(ctx context.Context, in *DownloadSegmentRequest) (*DownloadSegmentResponse, error)
	DeletePart(ctx context.Context, in *DeletePartRequest) (*DeletePartResponse, error)
	Batch(ctx context.Context, in *BatchRequest) (*BatchResponse, error)
	CompressedBatch(ctx context.Context, in *CompressedBatchRequest) (*CompressedBatchResponse, error)
	ProjectInfo(ctx context.Context, in *ProjectInfoRequest) (*ProjectInfoResponse, error)
	RevokeAPIKey(ctx context.Context, in *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error)
	BeginMoveObject(ctx context.Context, in *BeginMoveObjectRequest) (*BeginMoveObjectResponse, error)
	FinishMoveObject(ctx context.Context, in *FinishMoveObjectRequest) (*FinishMoveObjectResponse, error)
	BeginCopyObject(ctx context.Context, in *BeginCopyObjectRequest) (*BeginCopyObjectResponse, error)
	FinishCopyObject(ctx context.Context, in *FinishCopyObjectRequest) (*FinishCopyObjectResponse, error)
}

type drpcMetainfoClient struct {
	cc drpc.Conn
}

func NewDRPCMetainfoClient(cc drpc.Conn) DRPCMetainfoClient {
	return &drpcMetainfoClient{cc}
}

func (c *drpcMetainfoClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcMetainfoClient) CreateBucket(ctx context.Context, in *CreateBucketRequest) (*CreateBucketResponse, error) {
	out := new(CreateBucketResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CreateBucket", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetBucket(ctx context.Context, in *GetBucketRequest) (*GetBucketResponse, error) {
	out := new(GetBucketResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetBucket", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetBucketLocation(ctx context.Context, in *GetBucketLocationRequest) (*GetBucketLocationResponse, error) {
	out := new(GetBucketLocationResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetBucketLocation", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetBucketVersioning(ctx context.Context, in *GetBucketVersioningRequest) (*GetBucketVersioningResponse, error) {
	out := new(GetBucketVersioningResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetBucketVersioning", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) SetBucketVersioning(ctx context.Context, in *SetBucketVersioningRequest) (*SetBucketVersioningResponse, error) {
	out := new(SetBucketVersioningResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/SetBucketVersioning", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetBucketObjectLockConfiguration(ctx context.Context, in *GetBucketObjectLockConfigurationRequest) (*GetBucketObjectLockConfigurationResponse, error) {
	out := new(GetBucketObjectLockConfigurationResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetBucketObjectLockConfiguration", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DeleteBucket(ctx context.Context, in *DeleteBucketRequest) (*DeleteBucketResponse, error) {
	out := new(DeleteBucketResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DeleteBucket", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListBuckets(ctx context.Context, in *ListBucketsRequest) (*ListBucketsResponse, error) {
	out := new(ListBucketsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListBuckets", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginObject(ctx context.Context, in *BeginObjectRequest) (*BeginObjectResponse, error) {
	out := new(BeginObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) CommitObject(ctx context.Context, in *CommitObjectRequest) (*CommitObjectResponse, error) {
	out := new(CommitObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CommitObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetObject(ctx context.Context, in *GetObjectRequest) (*GetObjectResponse, error) {
	out := new(GetObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListObjects(ctx context.Context, in *ListObjectsRequest) (*ListObjectsResponse, error) {
	out := new(ListObjectsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListObjects", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginDeleteObject(ctx context.Context, in *BeginDeleteObjectRequest) (*BeginDeleteObjectResponse, error) {
	out := new(BeginDeleteObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginDeleteObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishDeleteObject(ctx context.Context, in *FinishDeleteObjectRequest) (*FinishDeleteObjectResponse, error) {
	out := new(FinishDeleteObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishDeleteObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetObjectIPs(ctx context.Context, in *GetObjectIPsRequest) (*GetObjectIPsResponse, error) {
	out := new(GetObjectIPsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetObjectIPs", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListPendingObjectStreams(ctx context.Context, in *ListPendingObjectStreamsRequest) (*ListPendingObjectStreamsResponse, error) {
	out := new(ListPendingObjectStreamsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListPendingObjectStreams", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DownloadObject(ctx context.Context, in *DownloadObjectRequest) (*DownloadObjectResponse, error) {
	out := new(DownloadObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DownloadObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) UpdateObjectMetadata(ctx context.Context, in *UpdateObjectMetadataRequest) (*UpdateObjectMetadataResponse, error) {
	out := new(UpdateObjectMetadataResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/UpdateObjectMetadata", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetObjectRetention(ctx context.Context, in *GetObjectRetentionRequest) (*GetObjectRetentionResponse, error) {
	out := new(GetObjectRetentionResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetObjectRetention", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) SetObjectRetention(ctx context.Context, in *SetObjectRetentionRequest) (*SetObjectRetentionResponse, error) {
	out := new(SetObjectRetentionResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/SetObjectRetention", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginSegment(ctx context.Context, in *BeginSegmentRequest) (*BeginSegmentResponse, error) {
	out := new(BeginSegmentResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) RetryBeginSegmentPieces(ctx context.Context, in *RetryBeginSegmentPiecesRequest) (*RetryBeginSegmentPiecesResponse, error) {
	out := new(RetryBeginSegmentPiecesResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/RetryBeginSegmentPieces", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) CommitSegment(ctx context.Context, in *CommitSegmentRequest) (*CommitSegmentResponse, error) {
	out := new(CommitSegmentResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CommitSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) MakeInlineSegment(ctx context.Context, in *MakeInlineSegmentRequest) (*MakeInlineSegmentResponse, error) {
	out := new(MakeInlineSegmentResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/MakeInlineSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginDeleteSegment(ctx context.Context, in *BeginDeleteSegmentRequest) (*BeginDeleteSegmentResponse, error) {
	out := new(BeginDeleteSegmentResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginDeleteSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishDeleteSegment(ctx context.Context, in *FinishDeleteSegmentRequest) (*FinishDeleteSegmentResponse, error) {
	out := new(FinishDeleteSegmentResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishDeleteSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListSegments(ctx context.Context, in *ListSegmentsRequest) (*ListSegmentsResponse, error) {
	out := new(ListSegmentsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListSegments", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DownloadSegment(ctx context.Context, in *DownloadSegmentRequest) (*DownloadSegmentResponse, error) {
	out := new(DownloadSegmentResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DownloadSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DeletePart(ctx context.Context, in *DeletePartRequest) (*DeletePartResponse, error) {
	out := new(DeletePartResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DeletePart", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) Batch(ctx context.Context, in *BatchRequest) (*BatchResponse, error) {
	out := new(BatchResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/Batch", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) CompressedBatch(ctx context.Context, in *CompressedBatchRequest) (*CompressedBatchResponse, error) {
	out := new(CompressedBatchResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CompressedBatch", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ProjectInfo(ctx context.Context, in *ProjectInfoRequest) (*ProjectInfoResponse, error) {
	out := new(ProjectInfoResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ProjectInfo", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) RevokeAPIKey(ctx context.Context, in *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error) {
	out := new(RevokeAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/RevokeAPIKey", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginMoveObject(ctx context.Context, in *BeginMoveObjectRequest) (*BeginMoveObjectResponse, error) {
	out := new(BeginMoveObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginMoveObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishMoveObject(ctx context.Context, in *FinishMoveObjectRequest) (*FinishMoveObjectResponse, error) {
	out := new(FinishMoveObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishMoveObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginCopyObject(ctx context.Context, in *BeginCopyObjectRequest) (*BeginCopyObjectResponse, error) {
	out := new(BeginCopyObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginCopyObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishCopyObject(ctx context.Context, in *FinishCopyObjectRequest) (*FinishCopyObjectResponse, error) {
	out := new(FinishCopyObjectResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishCopyObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCMetainfoServer interface {
	CreateBucket(context.Context, *CreateBucketRequest) (*CreateBucketResponse, error)
	GetBucket(context.Context, *GetBucketRequest) (*GetBucketResponse, error)
	GetBucketLocation(context.Context, *GetBucketLocationRequest) (*GetBucketLocationResponse, error)
	GetBucketVersioning(context.Context, *GetBucketVersioningRequest) (*GetBucketVersioningResponse, error)
	SetBucketVersioning(context.Context, *SetBucketVersioningRequest) (*SetBucketVersioningResponse, error)
	GetBucketObjectLockConfiguration(context.Context, *GetBucketObjectLockConfigurationRequest) (*GetBucketObjectLockConfigurationResponse, error)
	DeleteBucket(context.Context, *DeleteBucketRequest) (*DeleteBucketResponse, error)
	ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error)
	BeginObject(context.Context, *BeginObjectRequest) (*BeginObjectResponse, error)
	CommitObject(context.Context, *CommitObjectRequest) (*CommitObjectResponse, error)
	GetObject(context.Context, *GetObjectRequest) (*GetObjectResponse, error)
	ListObjects(context.Context, *ListObjectsRequest) (*ListObjectsResponse, error)
	BeginDeleteObject(context.Context, *BeginDeleteObjectRequest) (*BeginDeleteObjectResponse, error)
	FinishDeleteObject(context.Context, *FinishDeleteObjectRequest) (*FinishDeleteObjectResponse, error)
	GetObjectIPs(context.Context, *GetObjectIPsRequest) (*GetObjectIPsResponse, error)
	ListPendingObjectStreams(context.Context, *ListPendingObjectStreamsRequest) (*ListPendingObjectStreamsResponse, error)
	DownloadObject(context.Context, *DownloadObjectRequest) (*DownloadObjectResponse, error)
	UpdateObjectMetadata(context.Context, *UpdateObjectMetadataRequest) (*UpdateObjectMetadataResponse, error)
	GetObjectRetention(context.Context, *GetObjectRetentionRequest) (*GetObjectRetentionResponse, error)
	SetObjectRetention(context.Context, *SetObjectRetentionRequest) (*SetObjectRetentionResponse, error)
	BeginSegment(context.Context, *BeginSegmentRequest) (*BeginSegmentResponse, error)
	RetryBeginSegmentPieces(context.Context, *RetryBeginSegmentPiecesRequest) (*RetryBeginSegmentPiecesResponse, error)
	CommitSegment(context.Context, *CommitSegmentRequest) (*CommitSegmentResponse, error)
	MakeInlineSegment(context.Context, *MakeInlineSegmentRequest) (*MakeInlineSegmentResponse, error)
	BeginDeleteSegment(context.Context, *BeginDeleteSegmentRequest) (*BeginDeleteSegmentResponse, error)
	FinishDeleteSegment(context.Context, *FinishDeleteSegmentRequest) (*FinishDeleteSegmentResponse, error)
	ListSegments(context.Context, *ListSegmentsRequest) (*ListSegmentsResponse, error)
	DownloadSegment(context.Context, *DownloadSegmentRequest) (*DownloadSegmentResponse, error)
	DeletePart(context.Context, *DeletePartRequest) (*DeletePartResponse, error)
	Batch(context.Context, *BatchRequest) (*BatchResponse, error)
	CompressedBatch(context.Context, *CompressedBatchRequest) (*CompressedBatchResponse, error)
	ProjectInfo(context.Context, *ProjectInfoRequest) (*ProjectInfoResponse, error)
	RevokeAPIKey(context.Context, *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error)
	BeginMoveObject(context.Context, *BeginMoveObjectRequest) (*BeginMoveObjectResponse, error)
	FinishMoveObject(context.Context, *FinishMoveObjectRequest) (*FinishMoveObjectResponse, error)
	BeginCopyObject(context.Context, *BeginCopyObjectRequest) (*BeginCopyObjectResponse, error)
	FinishCopyObject(context.Context, *FinishCopyObjectRequest) (*FinishCopyObjectResponse, error)
}

type DRPCMetainfoUnimplementedServer struct{}

func (s *DRPCMetainfoUnimplementedServer) CreateBucket(context.Context, *CreateBucketRequest) (*CreateBucketResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetBucket(context.Context, *GetBucketRequest) (*GetBucketResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetBucketLocation(context.Context, *GetBucketLocationRequest) (*GetBucketLocationResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetBucketVersioning(context.Context, *GetBucketVersioningRequest) (*GetBucketVersioningResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) SetBucketVersioning(context.Context, *SetBucketVersioningRequest) (*SetBucketVersioningResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetBucketObjectLockConfiguration(context.Context, *GetBucketObjectLockConfigurationRequest) (*GetBucketObjectLockConfigurationResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DeleteBucket(context.Context, *DeleteBucketRequest) (*DeleteBucketResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginObject(context.Context, *BeginObjectRequest) (*BeginObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) CommitObject(context.Context, *CommitObjectRequest) (*CommitObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetObject(context.Context, *GetObjectRequest) (*GetObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListObjects(context.Context, *ListObjectsRequest) (*ListObjectsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginDeleteObject(context.Context, *BeginDeleteObjectRequest) (*BeginDeleteObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishDeleteObject(context.Context, *FinishDeleteObjectRequest) (*FinishDeleteObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetObjectIPs(context.Context, *GetObjectIPsRequest) (*GetObjectIPsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListPendingObjectStreams(context.Context, *ListPendingObjectStreamsRequest) (*ListPendingObjectStreamsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DownloadObject(context.Context, *DownloadObjectRequest) (*DownloadObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) UpdateObjectMetadata(context.Context, *UpdateObjectMetadataRequest) (*UpdateObjectMetadataResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetObjectRetention(context.Context, *GetObjectRetentionRequest) (*GetObjectRetentionResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) SetObjectRetention(context.Context, *SetObjectRetentionRequest) (*SetObjectRetentionResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginSegment(context.Context, *BeginSegmentRequest) (*BeginSegmentResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) RetryBeginSegmentPieces(context.Context, *RetryBeginSegmentPiecesRequest) (*RetryBeginSegmentPiecesResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) CommitSegment(context.Context, *CommitSegmentRequest) (*CommitSegmentResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) MakeInlineSegment(context.Context, *MakeInlineSegmentRequest) (*MakeInlineSegmentResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginDeleteSegment(context.Context, *BeginDeleteSegmentRequest) (*BeginDeleteSegmentResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishDeleteSegment(context.Context, *FinishDeleteSegmentRequest) (*FinishDeleteSegmentResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListSegments(context.Context, *ListSegmentsRequest) (*ListSegmentsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DownloadSegment(context.Context, *DownloadSegmentRequest) (*DownloadSegmentResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DeletePart(context.Context, *DeletePartRequest) (*DeletePartResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) Batch(context.Context, *BatchRequest) (*BatchResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) CompressedBatch(context.Context, *CompressedBatchRequest) (*CompressedBatchResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ProjectInfo(context.Context, *ProjectInfoRequest) (*ProjectInfoResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) RevokeAPIKey(context.Context, *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginMoveObject(context.Context, *BeginMoveObjectRequest) (*BeginMoveObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishMoveObject(context.Context, *FinishMoveObjectRequest) (*FinishMoveObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginCopyObject(context.Context, *BeginCopyObjectRequest) (*BeginCopyObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishCopyObject(context.Context, *FinishCopyObjectRequest) (*FinishCopyObjectResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCMetainfoDescription struct{}

func (DRPCMetainfoDescription) NumMethods() int { return 37 }

func (DRPCMetainfoDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/metainfo.Metainfo/CreateBucket", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CreateBucket(
						ctx,
						in1.(*CreateBucketRequest),
					)
			}, DRPCMetainfoServer.CreateBucket, true
	case 1:
		return "/metainfo.Metainfo/GetBucket", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetBucket(
						ctx,
						in1.(*GetBucketRequest),
					)
			}, DRPCMetainfoServer.GetBucket, true
	case 2:
		return "/metainfo.Metainfo/GetBucketLocation", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetBucketLocation(
						ctx,
						in1.(*GetBucketLocationRequest),
					)
			}, DRPCMetainfoServer.GetBucketLocation, true
	case 3:
		return "/metainfo.Metainfo/GetBucketVersioning", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetBucketVersioning(
						ctx,
						in1.(*GetBucketVersioningRequest),
					)
			}, DRPCMetainfoServer.GetBucketVersioning, true
	case 4:
		return "/metainfo.Metainfo/SetBucketVersioning", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					SetBucketVersioning(
						ctx,
						in1.(*SetBucketVersioningRequest),
					)
			}, DRPCMetainfoServer.SetBucketVersioning, true
	case 5:
		return "/metainfo.Metainfo/GetBucketObjectLockConfiguration", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetBucketObjectLockConfiguration(
						ctx,
						in1.(*GetBucketObjectLockConfigurationRequest),
					)
			}, DRPCMetainfoServer.GetBucketObjectLockConfiguration, true
	case 6:
		return "/metainfo.Metainfo/DeleteBucket", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DeleteBucket(
						ctx,
						in1.(*DeleteBucketRequest),
					)
			}, DRPCMetainfoServer.DeleteBucket, true
	case 7:
		return "/metainfo.Metainfo/ListBuckets", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListBuckets(
						ctx,
						in1.(*ListBucketsRequest),
					)
			}, DRPCMetainfoServer.ListBuckets, true
	case 8:
		return "/metainfo.Metainfo/BeginObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginObject(
						ctx,
						in1.(*BeginObjectRequest),
					)
			}, DRPCMetainfoServer.BeginObject, true
	case 9:
		return "/metainfo.Metainfo/CommitObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CommitObject(
						ctx,
						in1.(*CommitObjectRequest),
					)
			}, DRPCMetainfoServer.CommitObject, true
	case 10:
		return "/metainfo.Metainfo/GetObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetObject(
						ctx,
						in1.(*GetObjectRequest),
					)
			}, DRPCMetainfoServer.GetObject, true
	case 11:
		return "/metainfo.Metainfo/ListObjects", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListObjects(
						ctx,
						in1.(*ListObjectsRequest),
					)
			}, DRPCMetainfoServer.ListObjects, true
	case 12:
		return "/metainfo.Metainfo/BeginDeleteObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginDeleteObject(
						ctx,
						in1.(*BeginDeleteObjectRequest),
					)
			}, DRPCMetainfoServer.BeginDeleteObject, true
	case 13:
		return "/metainfo.Metainfo/FinishDeleteObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishDeleteObject(
						ctx,
						in1.(*FinishDeleteObjectRequest),
					)
			}, DRPCMetainfoServer.FinishDeleteObject, true
	case 14:
		return "/metainfo.Metainfo/GetObjectIPs", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetObjectIPs(
						ctx,
						in1.(*GetObjectIPsRequest),
					)
			}, DRPCMetainfoServer.GetObjectIPs, true
	case 15:
		return "/metainfo.Metainfo/ListPendingObjectStreams", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListPendingObjectStreams(
						ctx,
						in1.(*ListPendingObjectStreamsRequest),
					)
			}, DRPCMetainfoServer.ListPendingObjectStreams, true
	case 16:
		return "/metainfo.Metainfo/DownloadObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DownloadObject(
						ctx,
						in1.(*DownloadObjectRequest),
					)
			}, DRPCMetainfoServer.DownloadObject, true
	case 17:
		return "/metainfo.Metainfo/UpdateObjectMetadata", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					UpdateObjectMetadata(
						ctx,
						in1.(*UpdateObjectMetadataRequest),
					)
			}, DRPCMetainfoServer.UpdateObjectMetadata, true
	case 18:
		return "/metainfo.Metainfo/GetObjectRetention", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetObjectRetention(
						ctx,
						in1.(*GetObjectRetentionRequest),
					)
			}, DRPCMetainfoServer.GetObjectRetention, true
	case 19:
		return "/metainfo.Metainfo/SetObjectRetention", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					SetObjectRetention(
						ctx,
						in1.(*SetObjectRetentionRequest),
					)
			}, DRPCMetainfoServer.SetObjectRetention, true
	case 20:
		return "/metainfo.Metainfo/BeginSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginSegment(
						ctx,
						in1.(*BeginSegmentRequest),
					)
			}, DRPCMetainfoServer.BeginSegment, true
	case 21:
		return "/metainfo.Metainfo/RetryBeginSegmentPieces", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					RetryBeginSegmentPieces(
						ctx,
						in1.(*RetryBeginSegmentPiecesRequest),
					)
			}, DRPCMetainfoServer.RetryBeginSegmentPieces, true
	case 22:
		return "/metainfo.Metainfo/CommitSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CommitSegment(
						ctx,
						in1.(*CommitSegmentRequest),
					)
			}, DRPCMetainfoServer.CommitSegment, true
	case 23:
		return "/metainfo.Metainfo/MakeInlineSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					MakeInlineSegment(
						ctx,
						in1.(*MakeInlineSegmentRequest),
					)
			}, DRPCMetainfoServer.MakeInlineSegment, true
	case 24:
		return "/metainfo.Metainfo/BeginDeleteSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginDeleteSegment(
						ctx,
						in1.(*BeginDeleteSegmentRequest),
					)
			}, DRPCMetainfoServer.BeginDeleteSegment, true
	case 25:
		return "/metainfo.Metainfo/FinishDeleteSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishDeleteSegment(
						ctx,
						in1.(*FinishDeleteSegmentRequest),
					)
			}, DRPCMetainfoServer.FinishDeleteSegment, true
	case 26:
		return "/metainfo.Metainfo/ListSegments", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListSegments(
						ctx,
						in1.(*ListSegmentsRequest),
					)
			}, DRPCMetainfoServer.ListSegments, true
	case 27:
		return "/metainfo.Metainfo/DownloadSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DownloadSegment(
						ctx,
						in1.(*DownloadSegmentRequest),
					)
			}, DRPCMetainfoServer.DownloadSegment, true
	case 28:
		return "/metainfo.Metainfo/DeletePart", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DeletePart(
						ctx,
						in1.(*DeletePartRequest),
					)
			}, DRPCMetainfoServer.DeletePart, true
	case 29:
		return "/metainfo.Metainfo/Batch", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					Batch(
						ctx,
						in1.(*BatchRequest),
					)
			}, DRPCMetainfoServer.Batch, true
	case 30:
		return "/metainfo.Metainfo/CompressedBatch", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CompressedBatch(
						ctx,
						in1.(*CompressedBatchRequest),
					)
			}, DRPCMetainfoServer.CompressedBatch, true
	case 31:
		return "/metainfo.Metainfo/ProjectInfo", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ProjectInfo(
						ctx,
						in1.(*ProjectInfoRequest),
					)
			}, DRPCMetainfoServer.ProjectInfo, true
	case 32:
		return "/metainfo.Metainfo/RevokeAPIKey", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					RevokeAPIKey(
						ctx,
						in1.(*RevokeAPIKeyRequest),
					)
			}, DRPCMetainfoServer.RevokeAPIKey, true
	case 33:
		return "/metainfo.Metainfo/BeginMoveObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginMoveObject(
						ctx,
						in1.(*BeginMoveObjectRequest),
					)
			}, DRPCMetainfoServer.BeginMoveObject, true
	case 34:
		return "/metainfo.Metainfo/FinishMoveObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishMoveObject(
						ctx,
						in1.(*FinishMoveObjectRequest),
					)
			}, DRPCMetainfoServer.FinishMoveObject, true
	case 35:
		return "/metainfo.Metainfo/BeginCopyObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginCopyObject(
						ctx,
						in1.(*BeginCopyObjectRequest),
					)
			}, DRPCMetainfoServer.BeginCopyObject, true
	case 36:
		return "/metainfo.Metainfo/FinishCopyObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishCopyObject(
						ctx,
						in1.(*FinishCopyObjectRequest),
					)
			}, DRPCMetainfoServer.FinishCopyObject, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterMetainfo(mux drpc.Mux, impl DRPCMetainfoServer) error {
	return mux.Register(impl, DRPCMetainfoDescription{})
}

type DRPCMetainfo_CreateBucketStream interface {
	drpc.Stream
	SendAndClose(*CreateBucketResponse) error
}

type drpcMetainfo_CreateBucketStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CreateBucketStream) SendAndClose(m *CreateBucketResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetBucketStream interface {
	drpc.Stream
	SendAndClose(*GetBucketResponse) error
}

type drpcMetainfo_GetBucketStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetBucketStream) SendAndClose(m *GetBucketResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetBucketLocationStream interface {
	drpc.Stream
	SendAndClose(*GetBucketLocationResponse) error
}

type drpcMetainfo_GetBucketLocationStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetBucketLocationStream) SendAndClose(m *GetBucketLocationResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetBucketVersioningStream interface {
	drpc.Stream
	SendAndClose(*GetBucketVersioningResponse) error
}

type drpcMetainfo_GetBucketVersioningStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetBucketVersioningStream) SendAndClose(m *GetBucketVersioningResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_SetBucketVersioningStream interface {
	drpc.Stream
	SendAndClose(*SetBucketVersioningResponse) error
}

type drpcMetainfo_SetBucketVersioningStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_SetBucketVersioningStream) SendAndClose(m *SetBucketVersioningResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetBucketObjectLockConfigurationStream interface {
	drpc.Stream
	SendAndClose(*GetBucketObjectLockConfigurationResponse) error
}

type drpcMetainfo_GetBucketObjectLockConfigurationStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetBucketObjectLockConfigurationStream) SendAndClose(m *GetBucketObjectLockConfigurationResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DeleteBucketStream interface {
	drpc.Stream
	SendAndClose(*DeleteBucketResponse) error
}

type drpcMetainfo_DeleteBucketStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DeleteBucketStream) SendAndClose(m *DeleteBucketResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListBucketsStream interface {
	drpc.Stream
	SendAndClose(*ListBucketsResponse) error
}

type drpcMetainfo_ListBucketsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListBucketsStream) SendAndClose(m *ListBucketsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginObjectStream interface {
	drpc.Stream
	SendAndClose(*BeginObjectResponse) error
}

type drpcMetainfo_BeginObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginObjectStream) SendAndClose(m *BeginObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_CommitObjectStream interface {
	drpc.Stream
	SendAndClose(*CommitObjectResponse) error
}

type drpcMetainfo_CommitObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CommitObjectStream) SendAndClose(m *CommitObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetObjectStream interface {
	drpc.Stream
	SendAndClose(*GetObjectResponse) error
}

type drpcMetainfo_GetObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetObjectStream) SendAndClose(m *GetObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListObjectsStream interface {
	drpc.Stream
	SendAndClose(*ListObjectsResponse) error
}

type drpcMetainfo_ListObjectsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListObjectsStream) SendAndClose(m *ListObjectsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginDeleteObjectStream interface {
	drpc.Stream
	SendAndClose(*BeginDeleteObjectResponse) error
}

type drpcMetainfo_BeginDeleteObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginDeleteObjectStream) SendAndClose(m *BeginDeleteObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishDeleteObjectStream interface {
	drpc.Stream
	SendAndClose(*FinishDeleteObjectResponse) error
}

type drpcMetainfo_FinishDeleteObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishDeleteObjectStream) SendAndClose(m *FinishDeleteObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetObjectIPsStream interface {
	drpc.Stream
	SendAndClose(*GetObjectIPsResponse) error
}

type drpcMetainfo_GetObjectIPsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetObjectIPsStream) SendAndClose(m *GetObjectIPsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListPendingObjectStreamsStream interface {
	drpc.Stream
	SendAndClose(*ListPendingObjectStreamsResponse) error
}

type drpcMetainfo_ListPendingObjectStreamsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListPendingObjectStreamsStream) SendAndClose(m *ListPendingObjectStreamsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DownloadObjectStream interface {
	drpc.Stream
	SendAndClose(*DownloadObjectResponse) error
}

type drpcMetainfo_DownloadObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DownloadObjectStream) SendAndClose(m *DownloadObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_UpdateObjectMetadataStream interface {
	drpc.Stream
	SendAndClose(*UpdateObjectMetadataResponse) error
}

type drpcMetainfo_UpdateObjectMetadataStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_UpdateObjectMetadataStream) SendAndClose(m *UpdateObjectMetadataResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetObjectRetentionStream interface {
	drpc.Stream
	SendAndClose(*GetObjectRetentionResponse) error
}

type drpcMetainfo_GetObjectRetentionStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetObjectRetentionStream) SendAndClose(m *GetObjectRetentionResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_SetObjectRetentionStream interface {
	drpc.Stream
	SendAndClose(*SetObjectRetentionResponse) error
}

type drpcMetainfo_SetObjectRetentionStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_SetObjectRetentionStream) SendAndClose(m *SetObjectRetentionResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginSegmentStream interface {
	drpc.Stream
	SendAndClose(*BeginSegmentResponse) error
}

type drpcMetainfo_BeginSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginSegmentStream) SendAndClose(m *BeginSegmentResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_RetryBeginSegmentPiecesStream interface {
	drpc.Stream
	SendAndClose(*RetryBeginSegmentPiecesResponse) error
}

type drpcMetainfo_RetryBeginSegmentPiecesStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_RetryBeginSegmentPiecesStream) SendAndClose(m *RetryBeginSegmentPiecesResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_CommitSegmentStream interface {
	drpc.Stream
	SendAndClose(*CommitSegmentResponse) error
}

type drpcMetainfo_CommitSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CommitSegmentStream) SendAndClose(m *CommitSegmentResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_MakeInlineSegmentStream interface {
	drpc.Stream
	SendAndClose(*MakeInlineSegmentResponse) error
}

type drpcMetainfo_MakeInlineSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_MakeInlineSegmentStream) SendAndClose(m *MakeInlineSegmentResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginDeleteSegmentStream interface {
	drpc.Stream
	SendAndClose(*BeginDeleteSegmentResponse) error
}

type drpcMetainfo_BeginDeleteSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginDeleteSegmentStream) SendAndClose(m *BeginDeleteSegmentResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishDeleteSegmentStream interface {
	drpc.Stream
	SendAndClose(*FinishDeleteSegmentResponse) error
}

type drpcMetainfo_FinishDeleteSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishDeleteSegmentStream) SendAndClose(m *FinishDeleteSegmentResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListSegmentsStream interface {
	drpc.Stream
	SendAndClose(*ListSegmentsResponse) error
}

type drpcMetainfo_ListSegmentsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListSegmentsStream) SendAndClose(m *ListSegmentsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DownloadSegmentStream interface {
	drpc.Stream
	SendAndClose(*DownloadSegmentResponse) error
}

type drpcMetainfo_DownloadSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DownloadSegmentStream) SendAndClose(m *DownloadSegmentResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DeletePartStream interface {
	drpc.Stream
	SendAndClose(*DeletePartResponse) error
}

type drpcMetainfo_DeletePartStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DeletePartStream) SendAndClose(m *DeletePartResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BatchStream interface {
	drpc.Stream
	SendAndClose(*BatchResponse) error
}

type drpcMetainfo_BatchStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BatchStream) SendAndClose(m *BatchResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_CompressedBatchStream interface {
	drpc.Stream
	SendAndClose(*CompressedBatchResponse) error
}

type drpcMetainfo_CompressedBatchStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CompressedBatchStream) SendAndClose(m *CompressedBatchResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ProjectInfoStream interface {
	drpc.Stream
	SendAndClose(*ProjectInfoResponse) error
}

type drpcMetainfo_ProjectInfoStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ProjectInfoStream) SendAndClose(m *ProjectInfoResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_RevokeAPIKeyStream interface {
	drpc.Stream
	SendAndClose(*RevokeAPIKeyResponse) error
}

type drpcMetainfo_RevokeAPIKeyStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_RevokeAPIKeyStream) SendAndClose(m *RevokeAPIKeyResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginMoveObjectStream interface {
	drpc.Stream
	SendAndClose(*BeginMoveObjectResponse) error
}

type drpcMetainfo_BeginMoveObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginMoveObjectStream) SendAndClose(m *BeginMoveObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishMoveObjectStream interface {
	drpc.Stream
	SendAndClose(*FinishMoveObjectResponse) error
}

type drpcMetainfo_FinishMoveObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishMoveObjectStream) SendAndClose(m *FinishMoveObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginCopyObjectStream interface {
	drpc.Stream
	SendAndClose(*BeginCopyObjectResponse) error
}

type drpcMetainfo_BeginCopyObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginCopyObjectStream) SendAndClose(m *BeginCopyObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishCopyObjectStream interface {
	drpc.Stream
	SendAndClose(*FinishCopyObjectResponse) error
}

type drpcMetainfo_FinishCopyObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishCopyObjectStream) SendAndClose(m *FinishCopyObjectResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
