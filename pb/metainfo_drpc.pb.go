// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.28
// source: metainfo.proto

package pb

import (
	bytes "bytes"
	context "context"
	errors "errors"

	jsonpb "github.com/gogo/protobuf/jsonpb"
	proto "github.com/gogo/protobuf/proto"

	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_metainfo_proto struct{}

func (drpcEncoding_File_metainfo_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_metainfo_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_metainfo_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	var buf bytes.Buffer
	err := new(jsonpb.Marshaler).Marshal(&buf, msg.(proto.Message))
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

func (drpcEncoding_File_metainfo_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return jsonpb.Unmarshal(bytes.NewReader(buf), msg.(proto.Message))
}

type DRPCMetainfoClient interface {
	DRPCConn() drpc.Conn

	CreateBucket(ctx context.Context, in *BucketCreateRequest) (*BucketCreateResponse, error)
	GetBucket(ctx context.Context, in *BucketGetRequest) (*BucketGetResponse, error)
	DeleteBucket(ctx context.Context, in *BucketDeleteRequest) (*BucketDeleteResponse, error)
	ListBuckets(ctx context.Context, in *BucketListRequest) (*BucketListResponse, error)
	BeginObject(ctx context.Context, in *ObjectBeginRequest) (*ObjectBeginResponse, error)
	CommitObject(ctx context.Context, in *ObjectCommitRequest) (*ObjectCommitResponse, error)
	GetObject(ctx context.Context, in *ObjectGetRequest) (*ObjectGetResponse, error)
	GetPendingObjects(ctx context.Context, in *GetPendingObjectsRequest) (*GetPendingObjectsResponse, error)
	ListObjects(ctx context.Context, in *ObjectListRequest) (*ObjectListResponse, error)
	BeginDeleteObject(ctx context.Context, in *ObjectBeginDeleteRequest) (*ObjectBeginDeleteResponse, error)
	FinishDeleteObject(ctx context.Context, in *ObjectFinishDeleteRequest) (*ObjectFinishDeleteResponse, error)
	GetObjectIPs(ctx context.Context, in *ObjectGetIPsRequest) (*ObjectGetIPsResponse, error)
	ListPendingObjectStreams(ctx context.Context, in *ObjectListPendingStreamsRequest) (*ObjectListPendingStreamsResponse, error)
	DownloadObject(ctx context.Context, in *ObjectDownloadRequest) (*ObjectDownloadResponse, error)
	UpdateObjectMetadata(ctx context.Context, in *ObjectUpdateMetadataRequest) (*ObjectUpdateMetadataResponse, error)
	BeginSegment(ctx context.Context, in *SegmentBeginRequest) (*SegmentBeginResponse, error)
	CommitSegment(ctx context.Context, in *SegmentCommitRequest) (*SegmentCommitResponse, error)
	MakeInlineSegment(ctx context.Context, in *SegmentMakeInlineRequest) (*SegmentMakeInlineResponse, error)
	BeginDeleteSegment(ctx context.Context, in *SegmentBeginDeleteRequest) (*SegmentBeginDeleteResponse, error)
	FinishDeleteSegment(ctx context.Context, in *SegmentFinishDeleteRequest) (*SegmentFinishDeleteResponse, error)
	ListSegments(ctx context.Context, in *SegmentListRequest) (*SegmentListResponse, error)
	DownloadSegment(ctx context.Context, in *SegmentDownloadRequest) (*SegmentDownloadResponse, error)
	DeletePart(ctx context.Context, in *PartDeleteRequest) (*PartDeleteResponse, error)
	Batch(ctx context.Context, in *BatchRequest) (*BatchResponse, error)
	ProjectInfo(ctx context.Context, in *ProjectInfoRequest) (*ProjectInfoResponse, error)
	RevokeAPIKey(ctx context.Context, in *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error)
	BeginMoveObject(ctx context.Context, in *ObjectBeginMoveRequest) (*ObjectBeginMoveResponse, error)
	FinishMoveObject(ctx context.Context, in *ObjectFinishMoveRequest) (*ObjectFinishMoveResponse, error)
	BeginCopyObject(ctx context.Context, in *ObjectBeginCopyRequest) (*ObjectBeginCopyResponse, error)
	FinishCopyObject(ctx context.Context, in *ObjectFinishCopyRequest) (*ObjectFinishCopyResponse, error)
}

type drpcMetainfoClient struct {
	cc drpc.Conn
}

func NewDRPCMetainfoClient(cc drpc.Conn) DRPCMetainfoClient {
	return &drpcMetainfoClient{cc}
}

func (c *drpcMetainfoClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcMetainfoClient) CreateBucket(ctx context.Context, in *BucketCreateRequest) (*BucketCreateResponse, error) {
	out := new(BucketCreateResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CreateBucket", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetBucket(ctx context.Context, in *BucketGetRequest) (*BucketGetResponse, error) {
	out := new(BucketGetResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetBucket", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DeleteBucket(ctx context.Context, in *BucketDeleteRequest) (*BucketDeleteResponse, error) {
	out := new(BucketDeleteResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DeleteBucket", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListBuckets(ctx context.Context, in *BucketListRequest) (*BucketListResponse, error) {
	out := new(BucketListResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListBuckets", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginObject(ctx context.Context, in *ObjectBeginRequest) (*ObjectBeginResponse, error) {
	out := new(ObjectBeginResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) CommitObject(ctx context.Context, in *ObjectCommitRequest) (*ObjectCommitResponse, error) {
	out := new(ObjectCommitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CommitObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetObject(ctx context.Context, in *ObjectGetRequest) (*ObjectGetResponse, error) {
	out := new(ObjectGetResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetPendingObjects(ctx context.Context, in *GetPendingObjectsRequest) (*GetPendingObjectsResponse, error) {
	out := new(GetPendingObjectsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetPendingObjects", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListObjects(ctx context.Context, in *ObjectListRequest) (*ObjectListResponse, error) {
	out := new(ObjectListResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListObjects", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginDeleteObject(ctx context.Context, in *ObjectBeginDeleteRequest) (*ObjectBeginDeleteResponse, error) {
	out := new(ObjectBeginDeleteResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginDeleteObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishDeleteObject(ctx context.Context, in *ObjectFinishDeleteRequest) (*ObjectFinishDeleteResponse, error) {
	out := new(ObjectFinishDeleteResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishDeleteObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) GetObjectIPs(ctx context.Context, in *ObjectGetIPsRequest) (*ObjectGetIPsResponse, error) {
	out := new(ObjectGetIPsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/GetObjectIPs", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListPendingObjectStreams(ctx context.Context, in *ObjectListPendingStreamsRequest) (*ObjectListPendingStreamsResponse, error) {
	out := new(ObjectListPendingStreamsResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListPendingObjectStreams", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DownloadObject(ctx context.Context, in *ObjectDownloadRequest) (*ObjectDownloadResponse, error) {
	out := new(ObjectDownloadResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DownloadObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) UpdateObjectMetadata(ctx context.Context, in *ObjectUpdateMetadataRequest) (*ObjectUpdateMetadataResponse, error) {
	out := new(ObjectUpdateMetadataResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/UpdateObjectMetadata", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginSegment(ctx context.Context, in *SegmentBeginRequest) (*SegmentBeginResponse, error) {
	out := new(SegmentBeginResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) CommitSegment(ctx context.Context, in *SegmentCommitRequest) (*SegmentCommitResponse, error) {
	out := new(SegmentCommitResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/CommitSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) MakeInlineSegment(ctx context.Context, in *SegmentMakeInlineRequest) (*SegmentMakeInlineResponse, error) {
	out := new(SegmentMakeInlineResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/MakeInlineSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginDeleteSegment(ctx context.Context, in *SegmentBeginDeleteRequest) (*SegmentBeginDeleteResponse, error) {
	out := new(SegmentBeginDeleteResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginDeleteSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishDeleteSegment(ctx context.Context, in *SegmentFinishDeleteRequest) (*SegmentFinishDeleteResponse, error) {
	out := new(SegmentFinishDeleteResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishDeleteSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ListSegments(ctx context.Context, in *SegmentListRequest) (*SegmentListResponse, error) {
	out := new(SegmentListResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ListSegments", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DownloadSegment(ctx context.Context, in *SegmentDownloadRequest) (*SegmentDownloadResponse, error) {
	out := new(SegmentDownloadResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DownloadSegment", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) DeletePart(ctx context.Context, in *PartDeleteRequest) (*PartDeleteResponse, error) {
	out := new(PartDeleteResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/DeletePart", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) Batch(ctx context.Context, in *BatchRequest) (*BatchResponse, error) {
	out := new(BatchResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/Batch", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) ProjectInfo(ctx context.Context, in *ProjectInfoRequest) (*ProjectInfoResponse, error) {
	out := new(ProjectInfoResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/ProjectInfo", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) RevokeAPIKey(ctx context.Context, in *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error) {
	out := new(RevokeAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/RevokeAPIKey", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginMoveObject(ctx context.Context, in *ObjectBeginMoveRequest) (*ObjectBeginMoveResponse, error) {
	out := new(ObjectBeginMoveResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginMoveObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishMoveObject(ctx context.Context, in *ObjectFinishMoveRequest) (*ObjectFinishMoveResponse, error) {
	out := new(ObjectFinishMoveResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishMoveObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) BeginCopyObject(ctx context.Context, in *ObjectBeginCopyRequest) (*ObjectBeginCopyResponse, error) {
	out := new(ObjectBeginCopyResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/BeginCopyObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcMetainfoClient) FinishCopyObject(ctx context.Context, in *ObjectFinishCopyRequest) (*ObjectFinishCopyResponse, error) {
	out := new(ObjectFinishCopyResponse)
	err := c.cc.Invoke(ctx, "/metainfo.Metainfo/FinishCopyObject", drpcEncoding_File_metainfo_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCMetainfoServer interface {
	CreateBucket(context.Context, *BucketCreateRequest) (*BucketCreateResponse, error)
	GetBucket(context.Context, *BucketGetRequest) (*BucketGetResponse, error)
	DeleteBucket(context.Context, *BucketDeleteRequest) (*BucketDeleteResponse, error)
	ListBuckets(context.Context, *BucketListRequest) (*BucketListResponse, error)
	BeginObject(context.Context, *ObjectBeginRequest) (*ObjectBeginResponse, error)
	CommitObject(context.Context, *ObjectCommitRequest) (*ObjectCommitResponse, error)
	GetObject(context.Context, *ObjectGetRequest) (*ObjectGetResponse, error)
	GetPendingObjects(context.Context, *GetPendingObjectsRequest) (*GetPendingObjectsResponse, error)
	ListObjects(context.Context, *ObjectListRequest) (*ObjectListResponse, error)
	BeginDeleteObject(context.Context, *ObjectBeginDeleteRequest) (*ObjectBeginDeleteResponse, error)
	FinishDeleteObject(context.Context, *ObjectFinishDeleteRequest) (*ObjectFinishDeleteResponse, error)
	GetObjectIPs(context.Context, *ObjectGetIPsRequest) (*ObjectGetIPsResponse, error)
	ListPendingObjectStreams(context.Context, *ObjectListPendingStreamsRequest) (*ObjectListPendingStreamsResponse, error)
	DownloadObject(context.Context, *ObjectDownloadRequest) (*ObjectDownloadResponse, error)
	UpdateObjectMetadata(context.Context, *ObjectUpdateMetadataRequest) (*ObjectUpdateMetadataResponse, error)
	BeginSegment(context.Context, *SegmentBeginRequest) (*SegmentBeginResponse, error)
	CommitSegment(context.Context, *SegmentCommitRequest) (*SegmentCommitResponse, error)
	MakeInlineSegment(context.Context, *SegmentMakeInlineRequest) (*SegmentMakeInlineResponse, error)
	BeginDeleteSegment(context.Context, *SegmentBeginDeleteRequest) (*SegmentBeginDeleteResponse, error)
	FinishDeleteSegment(context.Context, *SegmentFinishDeleteRequest) (*SegmentFinishDeleteResponse, error)
	ListSegments(context.Context, *SegmentListRequest) (*SegmentListResponse, error)
	DownloadSegment(context.Context, *SegmentDownloadRequest) (*SegmentDownloadResponse, error)
	DeletePart(context.Context, *PartDeleteRequest) (*PartDeleteResponse, error)
	Batch(context.Context, *BatchRequest) (*BatchResponse, error)
	ProjectInfo(context.Context, *ProjectInfoRequest) (*ProjectInfoResponse, error)
	RevokeAPIKey(context.Context, *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error)
	BeginMoveObject(context.Context, *ObjectBeginMoveRequest) (*ObjectBeginMoveResponse, error)
	FinishMoveObject(context.Context, *ObjectFinishMoveRequest) (*ObjectFinishMoveResponse, error)
	BeginCopyObject(context.Context, *ObjectBeginCopyRequest) (*ObjectBeginCopyResponse, error)
	FinishCopyObject(context.Context, *ObjectFinishCopyRequest) (*ObjectFinishCopyResponse, error)
}

type DRPCMetainfoUnimplementedServer struct{}

func (s *DRPCMetainfoUnimplementedServer) CreateBucket(context.Context, *BucketCreateRequest) (*BucketCreateResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetBucket(context.Context, *BucketGetRequest) (*BucketGetResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DeleteBucket(context.Context, *BucketDeleteRequest) (*BucketDeleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListBuckets(context.Context, *BucketListRequest) (*BucketListResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginObject(context.Context, *ObjectBeginRequest) (*ObjectBeginResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) CommitObject(context.Context, *ObjectCommitRequest) (*ObjectCommitResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetObject(context.Context, *ObjectGetRequest) (*ObjectGetResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetPendingObjects(context.Context, *GetPendingObjectsRequest) (*GetPendingObjectsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListObjects(context.Context, *ObjectListRequest) (*ObjectListResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginDeleteObject(context.Context, *ObjectBeginDeleteRequest) (*ObjectBeginDeleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishDeleteObject(context.Context, *ObjectFinishDeleteRequest) (*ObjectFinishDeleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) GetObjectIPs(context.Context, *ObjectGetIPsRequest) (*ObjectGetIPsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListPendingObjectStreams(context.Context, *ObjectListPendingStreamsRequest) (*ObjectListPendingStreamsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DownloadObject(context.Context, *ObjectDownloadRequest) (*ObjectDownloadResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) UpdateObjectMetadata(context.Context, *ObjectUpdateMetadataRequest) (*ObjectUpdateMetadataResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginSegment(context.Context, *SegmentBeginRequest) (*SegmentBeginResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) CommitSegment(context.Context, *SegmentCommitRequest) (*SegmentCommitResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) MakeInlineSegment(context.Context, *SegmentMakeInlineRequest) (*SegmentMakeInlineResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginDeleteSegment(context.Context, *SegmentBeginDeleteRequest) (*SegmentBeginDeleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishDeleteSegment(context.Context, *SegmentFinishDeleteRequest) (*SegmentFinishDeleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ListSegments(context.Context, *SegmentListRequest) (*SegmentListResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DownloadSegment(context.Context, *SegmentDownloadRequest) (*SegmentDownloadResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) DeletePart(context.Context, *PartDeleteRequest) (*PartDeleteResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) Batch(context.Context, *BatchRequest) (*BatchResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) ProjectInfo(context.Context, *ProjectInfoRequest) (*ProjectInfoResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) RevokeAPIKey(context.Context, *RevokeAPIKeyRequest) (*RevokeAPIKeyResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginMoveObject(context.Context, *ObjectBeginMoveRequest) (*ObjectBeginMoveResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishMoveObject(context.Context, *ObjectFinishMoveRequest) (*ObjectFinishMoveResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) BeginCopyObject(context.Context, *ObjectBeginCopyRequest) (*ObjectBeginCopyResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCMetainfoUnimplementedServer) FinishCopyObject(context.Context, *ObjectFinishCopyRequest) (*ObjectFinishCopyResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCMetainfoDescription struct{}

func (DRPCMetainfoDescription) NumMethods() int { return 30 }

func (DRPCMetainfoDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/metainfo.Metainfo/CreateBucket", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CreateBucket(
						ctx,
						in1.(*BucketCreateRequest),
					)
			}, DRPCMetainfoServer.CreateBucket, true
	case 1:
		return "/metainfo.Metainfo/GetBucket", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetBucket(
						ctx,
						in1.(*BucketGetRequest),
					)
			}, DRPCMetainfoServer.GetBucket, true
	case 2:
		return "/metainfo.Metainfo/DeleteBucket", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DeleteBucket(
						ctx,
						in1.(*BucketDeleteRequest),
					)
			}, DRPCMetainfoServer.DeleteBucket, true
	case 3:
		return "/metainfo.Metainfo/ListBuckets", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListBuckets(
						ctx,
						in1.(*BucketListRequest),
					)
			}, DRPCMetainfoServer.ListBuckets, true
	case 4:
		return "/metainfo.Metainfo/BeginObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginObject(
						ctx,
						in1.(*ObjectBeginRequest),
					)
			}, DRPCMetainfoServer.BeginObject, true
	case 5:
		return "/metainfo.Metainfo/CommitObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CommitObject(
						ctx,
						in1.(*ObjectCommitRequest),
					)
			}, DRPCMetainfoServer.CommitObject, true
	case 6:
		return "/metainfo.Metainfo/GetObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetObject(
						ctx,
						in1.(*ObjectGetRequest),
					)
			}, DRPCMetainfoServer.GetObject, true
	case 7:
		return "/metainfo.Metainfo/GetPendingObjects", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetPendingObjects(
						ctx,
						in1.(*GetPendingObjectsRequest),
					)
			}, DRPCMetainfoServer.GetPendingObjects, true
	case 8:
		return "/metainfo.Metainfo/ListObjects", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListObjects(
						ctx,
						in1.(*ObjectListRequest),
					)
			}, DRPCMetainfoServer.ListObjects, true
	case 9:
		return "/metainfo.Metainfo/BeginDeleteObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginDeleteObject(
						ctx,
						in1.(*ObjectBeginDeleteRequest),
					)
			}, DRPCMetainfoServer.BeginDeleteObject, true
	case 10:
		return "/metainfo.Metainfo/FinishDeleteObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishDeleteObject(
						ctx,
						in1.(*ObjectFinishDeleteRequest),
					)
			}, DRPCMetainfoServer.FinishDeleteObject, true
	case 11:
		return "/metainfo.Metainfo/GetObjectIPs", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					GetObjectIPs(
						ctx,
						in1.(*ObjectGetIPsRequest),
					)
			}, DRPCMetainfoServer.GetObjectIPs, true
	case 12:
		return "/metainfo.Metainfo/ListPendingObjectStreams", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListPendingObjectStreams(
						ctx,
						in1.(*ObjectListPendingStreamsRequest),
					)
			}, DRPCMetainfoServer.ListPendingObjectStreams, true
	case 13:
		return "/metainfo.Metainfo/DownloadObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DownloadObject(
						ctx,
						in1.(*ObjectDownloadRequest),
					)
			}, DRPCMetainfoServer.DownloadObject, true
	case 14:
		return "/metainfo.Metainfo/UpdateObjectMetadata", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					UpdateObjectMetadata(
						ctx,
						in1.(*ObjectUpdateMetadataRequest),
					)
			}, DRPCMetainfoServer.UpdateObjectMetadata, true
	case 15:
		return "/metainfo.Metainfo/BeginSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginSegment(
						ctx,
						in1.(*SegmentBeginRequest),
					)
			}, DRPCMetainfoServer.BeginSegment, true
	case 16:
		return "/metainfo.Metainfo/CommitSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					CommitSegment(
						ctx,
						in1.(*SegmentCommitRequest),
					)
			}, DRPCMetainfoServer.CommitSegment, true
	case 17:
		return "/metainfo.Metainfo/MakeInlineSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					MakeInlineSegment(
						ctx,
						in1.(*SegmentMakeInlineRequest),
					)
			}, DRPCMetainfoServer.MakeInlineSegment, true
	case 18:
		return "/metainfo.Metainfo/BeginDeleteSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginDeleteSegment(
						ctx,
						in1.(*SegmentBeginDeleteRequest),
					)
			}, DRPCMetainfoServer.BeginDeleteSegment, true
	case 19:
		return "/metainfo.Metainfo/FinishDeleteSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishDeleteSegment(
						ctx,
						in1.(*SegmentFinishDeleteRequest),
					)
			}, DRPCMetainfoServer.FinishDeleteSegment, true
	case 20:
		return "/metainfo.Metainfo/ListSegments", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ListSegments(
						ctx,
						in1.(*SegmentListRequest),
					)
			}, DRPCMetainfoServer.ListSegments, true
	case 21:
		return "/metainfo.Metainfo/DownloadSegment", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DownloadSegment(
						ctx,
						in1.(*SegmentDownloadRequest),
					)
			}, DRPCMetainfoServer.DownloadSegment, true
	case 22:
		return "/metainfo.Metainfo/DeletePart", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					DeletePart(
						ctx,
						in1.(*PartDeleteRequest),
					)
			}, DRPCMetainfoServer.DeletePart, true
	case 23:
		return "/metainfo.Metainfo/Batch", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					Batch(
						ctx,
						in1.(*BatchRequest),
					)
			}, DRPCMetainfoServer.Batch, true
	case 24:
		return "/metainfo.Metainfo/ProjectInfo", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					ProjectInfo(
						ctx,
						in1.(*ProjectInfoRequest),
					)
			}, DRPCMetainfoServer.ProjectInfo, true
	case 25:
		return "/metainfo.Metainfo/RevokeAPIKey", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					RevokeAPIKey(
						ctx,
						in1.(*RevokeAPIKeyRequest),
					)
			}, DRPCMetainfoServer.RevokeAPIKey, true
	case 26:
		return "/metainfo.Metainfo/BeginMoveObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginMoveObject(
						ctx,
						in1.(*ObjectBeginMoveRequest),
					)
			}, DRPCMetainfoServer.BeginMoveObject, true
	case 27:
		return "/metainfo.Metainfo/FinishMoveObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishMoveObject(
						ctx,
						in1.(*ObjectFinishMoveRequest),
					)
			}, DRPCMetainfoServer.FinishMoveObject, true
	case 28:
		return "/metainfo.Metainfo/BeginCopyObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					BeginCopyObject(
						ctx,
						in1.(*ObjectBeginCopyRequest),
					)
			}, DRPCMetainfoServer.BeginCopyObject, true
	case 29:
		return "/metainfo.Metainfo/FinishCopyObject", drpcEncoding_File_metainfo_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCMetainfoServer).
					FinishCopyObject(
						ctx,
						in1.(*ObjectFinishCopyRequest),
					)
			}, DRPCMetainfoServer.FinishCopyObject, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterMetainfo(mux drpc.Mux, impl DRPCMetainfoServer) error {
	return mux.Register(impl, DRPCMetainfoDescription{})
}

type DRPCMetainfo_CreateBucketStream interface {
	drpc.Stream
	SendAndClose(*BucketCreateResponse) error
}

type drpcMetainfo_CreateBucketStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CreateBucketStream) SendAndClose(m *BucketCreateResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetBucketStream interface {
	drpc.Stream
	SendAndClose(*BucketGetResponse) error
}

type drpcMetainfo_GetBucketStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetBucketStream) SendAndClose(m *BucketGetResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DeleteBucketStream interface {
	drpc.Stream
	SendAndClose(*BucketDeleteResponse) error
}

type drpcMetainfo_DeleteBucketStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DeleteBucketStream) SendAndClose(m *BucketDeleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListBucketsStream interface {
	drpc.Stream
	SendAndClose(*BucketListResponse) error
}

type drpcMetainfo_ListBucketsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListBucketsStream) SendAndClose(m *BucketListResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectBeginResponse) error
}

type drpcMetainfo_BeginObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginObjectStream) SendAndClose(m *ObjectBeginResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_CommitObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectCommitResponse) error
}

type drpcMetainfo_CommitObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CommitObjectStream) SendAndClose(m *ObjectCommitResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectGetResponse) error
}

type drpcMetainfo_GetObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetObjectStream) SendAndClose(m *ObjectGetResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetPendingObjectsStream interface {
	drpc.Stream
	SendAndClose(*GetPendingObjectsResponse) error
}

type drpcMetainfo_GetPendingObjectsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetPendingObjectsStream) SendAndClose(m *GetPendingObjectsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListObjectsStream interface {
	drpc.Stream
	SendAndClose(*ObjectListResponse) error
}

type drpcMetainfo_ListObjectsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListObjectsStream) SendAndClose(m *ObjectListResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginDeleteObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectBeginDeleteResponse) error
}

type drpcMetainfo_BeginDeleteObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginDeleteObjectStream) SendAndClose(m *ObjectBeginDeleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishDeleteObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectFinishDeleteResponse) error
}

type drpcMetainfo_FinishDeleteObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishDeleteObjectStream) SendAndClose(m *ObjectFinishDeleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_GetObjectIPsStream interface {
	drpc.Stream
	SendAndClose(*ObjectGetIPsResponse) error
}

type drpcMetainfo_GetObjectIPsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_GetObjectIPsStream) SendAndClose(m *ObjectGetIPsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListPendingObjectStreamsStream interface {
	drpc.Stream
	SendAndClose(*ObjectListPendingStreamsResponse) error
}

type drpcMetainfo_ListPendingObjectStreamsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListPendingObjectStreamsStream) SendAndClose(m *ObjectListPendingStreamsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DownloadObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectDownloadResponse) error
}

type drpcMetainfo_DownloadObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DownloadObjectStream) SendAndClose(m *ObjectDownloadResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_UpdateObjectMetadataStream interface {
	drpc.Stream
	SendAndClose(*ObjectUpdateMetadataResponse) error
}

type drpcMetainfo_UpdateObjectMetadataStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_UpdateObjectMetadataStream) SendAndClose(m *ObjectUpdateMetadataResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginSegmentStream interface {
	drpc.Stream
	SendAndClose(*SegmentBeginResponse) error
}

type drpcMetainfo_BeginSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginSegmentStream) SendAndClose(m *SegmentBeginResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_CommitSegmentStream interface {
	drpc.Stream
	SendAndClose(*SegmentCommitResponse) error
}

type drpcMetainfo_CommitSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_CommitSegmentStream) SendAndClose(m *SegmentCommitResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_MakeInlineSegmentStream interface {
	drpc.Stream
	SendAndClose(*SegmentMakeInlineResponse) error
}

type drpcMetainfo_MakeInlineSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_MakeInlineSegmentStream) SendAndClose(m *SegmentMakeInlineResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginDeleteSegmentStream interface {
	drpc.Stream
	SendAndClose(*SegmentBeginDeleteResponse) error
}

type drpcMetainfo_BeginDeleteSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginDeleteSegmentStream) SendAndClose(m *SegmentBeginDeleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishDeleteSegmentStream interface {
	drpc.Stream
	SendAndClose(*SegmentFinishDeleteResponse) error
}

type drpcMetainfo_FinishDeleteSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishDeleteSegmentStream) SendAndClose(m *SegmentFinishDeleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ListSegmentsStream interface {
	drpc.Stream
	SendAndClose(*SegmentListResponse) error
}

type drpcMetainfo_ListSegmentsStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ListSegmentsStream) SendAndClose(m *SegmentListResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DownloadSegmentStream interface {
	drpc.Stream
	SendAndClose(*SegmentDownloadResponse) error
}

type drpcMetainfo_DownloadSegmentStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DownloadSegmentStream) SendAndClose(m *SegmentDownloadResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_DeletePartStream interface {
	drpc.Stream
	SendAndClose(*PartDeleteResponse) error
}

type drpcMetainfo_DeletePartStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_DeletePartStream) SendAndClose(m *PartDeleteResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BatchStream interface {
	drpc.Stream
	SendAndClose(*BatchResponse) error
}

type drpcMetainfo_BatchStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BatchStream) SendAndClose(m *BatchResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_ProjectInfoStream interface {
	drpc.Stream
	SendAndClose(*ProjectInfoResponse) error
}

type drpcMetainfo_ProjectInfoStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_ProjectInfoStream) SendAndClose(m *ProjectInfoResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_RevokeAPIKeyStream interface {
	drpc.Stream
	SendAndClose(*RevokeAPIKeyResponse) error
}

type drpcMetainfo_RevokeAPIKeyStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_RevokeAPIKeyStream) SendAndClose(m *RevokeAPIKeyResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginMoveObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectBeginMoveResponse) error
}

type drpcMetainfo_BeginMoveObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginMoveObjectStream) SendAndClose(m *ObjectBeginMoveResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishMoveObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectFinishMoveResponse) error
}

type drpcMetainfo_FinishMoveObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishMoveObjectStream) SendAndClose(m *ObjectFinishMoveResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_BeginCopyObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectBeginCopyResponse) error
}

type drpcMetainfo_BeginCopyObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_BeginCopyObjectStream) SendAndClose(m *ObjectBeginCopyResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCMetainfo_FinishCopyObjectStream interface {
	drpc.Stream
	SendAndClose(*ObjectFinishCopyResponse) error
}

type drpcMetainfo_FinishCopyObjectStream struct {
	drpc.Stream
}

func (x *drpcMetainfo_FinishCopyObjectStream) SendAndClose(m *ObjectFinishCopyResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_metainfo_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
