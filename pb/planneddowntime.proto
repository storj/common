// Copyright (C) 2019 Storj Labs, Inc.
// See LICENSE for copying information.

syntax = "proto3";
option go_package = "storj.io/common/pb";

package planneddowntime;

import "gogo.proto";
import "google/protobuf/timestamp.proto";

service PlannedDowntime {
    rpc GetScheduled(GetScheduledRequest) returns (GetScheduledResponse);
    rpc GetAvailable(GetAvailableRequest) returns (GetAvailableResponse);
    rpc ScheduleDowntime(ScheduleDowntimeRequest) returns (ScheduleDowntimeResponse);
    rpc Cancel(CancelRequest) returns (CancelResponse);
}

message Timeframe {
    google.protobuf.Timestamp start = 2[(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp end = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message GetAvailableRequest {
    Timeframe timeframe = 1;
}

message GetAvailableResponse {
    repeated Timeframe timeframes = 1;
}

message DowntimeWindow {
    bytes id = 1;
    Timeframe timeframe = 2;
}

message GetScheduledRequest {}

message GetScheduledResponse {
    repeated DowntimeWindow windows = 1;
}

message ScheduleDowntimeRequest {
    Timeframe timeframe = 1;
}

message ScheduleDowntimeResponse {
    DowntimeWindow window = 2;
}

message CancelRequest {
    repeated bytes id = 1;
}

message CancelResponse {}
