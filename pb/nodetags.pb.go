// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nodetags.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Tag represents single key, value.
type Tag struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bc3b2ad6e71b396, []int{0}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// NodeTagSet
type NodeTagSet struct {
	// must always be set. this is the node the signer is signing for.
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Tags   []*Tag `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// must always be set. this makes sure the signature is signing the
	// timestamp inside.
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeTagSet) Reset()         { *m = NodeTagSet{} }
func (m *NodeTagSet) String() string { return proto.CompactTextString(m) }
func (*NodeTagSet) ProtoMessage()    {}
func (*NodeTagSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bc3b2ad6e71b396, []int{1}
}
func (m *NodeTagSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTagSet.Unmarshal(m, b)
}
func (m *NodeTagSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTagSet.Marshal(b, m, deterministic)
}
func (m *NodeTagSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTagSet.Merge(m, src)
}
func (m *NodeTagSet) XXX_Size() int {
	return xxx_messageInfo_NodeTagSet.Size(m)
}
func (m *NodeTagSet) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTagSet.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTagSet proto.InternalMessageInfo

func (m *NodeTagSet) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NodeTagSet) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NodeTagSet) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// SignedNodeTagSet is a tag set with additional signature.
type SignedNodeTagSet struct {
	// this is the serialized form of TagSet, serialized so that
	// the signature process has something stable to work with.
	SerializedTag []byte `protobuf:"bytes,1,opt,name=serialized_tag,json=serializedTag,proto3" json:"serialized_tag,omitempty"`
	// this is who signed (could be self signed, could be well known)
	// public key supposed to be available on satellite side based on this id.
	SignerNodeId []byte `protobuf:"bytes,3,opt,name=signer_node_id,json=signerNodeId,proto3" json:"signer_node_id,omitempty"`
	// the signature of serialized_tag.
	Signature            []byte   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedNodeTagSet) Reset()         { *m = SignedNodeTagSet{} }
func (m *SignedNodeTagSet) String() string { return proto.CompactTextString(m) }
func (*SignedNodeTagSet) ProtoMessage()    {}
func (*SignedNodeTagSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bc3b2ad6e71b396, []int{2}
}
func (m *SignedNodeTagSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedNodeTagSet.Unmarshal(m, b)
}
func (m *SignedNodeTagSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedNodeTagSet.Marshal(b, m, deterministic)
}
func (m *SignedNodeTagSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedNodeTagSet.Merge(m, src)
}
func (m *SignedNodeTagSet) XXX_Size() int {
	return xxx_messageInfo_SignedNodeTagSet.Size(m)
}
func (m *SignedNodeTagSet) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedNodeTagSet.DiscardUnknown(m)
}

var xxx_messageInfo_SignedNodeTagSet proto.InternalMessageInfo

func (m *SignedNodeTagSet) GetSerializedTag() []byte {
	if m != nil {
		return m.SerializedTag
	}
	return nil
}

func (m *SignedNodeTagSet) GetSignerNodeId() []byte {
	if m != nil {
		return m.SignerNodeId
	}
	return nil
}

func (m *SignedNodeTagSet) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// SignedNodeTagSets
type SignedNodeTagSets struct {
	Tags                 []*SignedNodeTagSet `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SignedNodeTagSets) Reset()         { *m = SignedNodeTagSets{} }
func (m *SignedNodeTagSets) String() string { return proto.CompactTextString(m) }
func (*SignedNodeTagSets) ProtoMessage()    {}
func (*SignedNodeTagSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bc3b2ad6e71b396, []int{3}
}
func (m *SignedNodeTagSets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedNodeTagSets.Unmarshal(m, b)
}
func (m *SignedNodeTagSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedNodeTagSets.Marshal(b, m, deterministic)
}
func (m *SignedNodeTagSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedNodeTagSets.Merge(m, src)
}
func (m *SignedNodeTagSets) XXX_Size() int {
	return xxx_messageInfo_SignedNodeTagSets.Size(m)
}
func (m *SignedNodeTagSets) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedNodeTagSets.DiscardUnknown(m)
}

var xxx_messageInfo_SignedNodeTagSets proto.InternalMessageInfo

func (m *SignedNodeTagSets) GetTags() []*SignedNodeTagSet {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*Tag)(nil), "node.Tag")
	proto.RegisterType((*NodeTagSet)(nil), "node.NodeTagSet")
	proto.RegisterType((*SignedNodeTagSet)(nil), "node.SignedNodeTagSet")
	proto.RegisterType((*SignedNodeTagSets)(nil), "node.SignedNodeTagSets")
}

func init() { proto.RegisterFile("nodetags.proto", fileDescriptor_3bc3b2ad6e71b396) }

var fileDescriptor_3bc3b2ad6e71b396 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xe9, 0xb6, 0xae, 0x74, 0x5c, 0x8b, 0x86, 0x45, 0x7b, 0x58, 0xa1, 0x14, 0x85, 0xe2,
	0xa1, 0x05, 0xfd, 0x01, 0x82, 0x37, 0x2f, 0x7b, 0xe8, 0xf6, 0xe4, 0xa5, 0x4c, 0xcd, 0x10, 0x22,
	0xdb, 0xa6, 0x34, 0x59, 0x0f, 0x82, 0xff, 0x5d, 0x92, 0xac, 0x54, 0xf6, 0x96, 0xf7, 0xf1, 0x26,
	0x6f, 0xde, 0x40, 0x32, 0x28, 0x4e, 0x06, 0x85, 0x2e, 0xc7, 0x49, 0x19, 0xc5, 0x22, 0xab, 0xf3,
	0x0a, 0xc2, 0x06, 0x05, 0x63, 0x10, 0x0d, 0xd8, 0x53, 0x1a, 0x64, 0x41, 0x11, 0xd7, 0xee, 0xcd,
	0xd6, 0x70, 0xf6, 0x85, 0xfb, 0x03, 0xa5, 0x8b, 0x2c, 0x28, 0x56, 0xb5, 0x17, 0x79, 0x07, 0xb0,
	0x55, 0x9c, 0x1a, 0x14, 0x3b, 0x32, 0xec, 0x16, 0xce, 0xed, 0x37, 0xad, 0xe4, 0x6e, 0x74, 0x55,
	0x2f, 0xad, 0x7c, 0xe3, 0xec, 0x0e, 0x22, 0x9b, 0x95, 0x2e, 0xb2, 0xb0, 0xb8, 0x78, 0x8a, 0x4b,
	0x8b, 0xcb, 0x06, 0x45, 0xed, 0x30, 0xdb, 0x40, 0x6c, 0x64, 0x4f, 0xda, 0x60, 0x3f, 0xa6, 0x61,
	0x16, 0x14, 0x61, 0x3d, 0x83, 0xfc, 0x07, 0xae, 0x76, 0x52, 0x0c, 0xc4, 0xff, 0x25, 0x3d, 0x40,
	0xa2, 0x69, 0x92, 0xb8, 0x97, 0xdf, 0xc4, 0x5b, 0x83, 0xe2, 0x18, 0x78, 0x39, 0x53, 0x5b, 0xe4,
	0x1e, 0x12, 0x6d, 0x47, 0xa7, 0xf6, 0x6f, 0xaf, 0xd0, 0xd9, 0x56, 0x9e, 0x6e, 0xfd, 0x76, 0x1b,
	0x88, 0xad, 0x46, 0x73, 0x98, 0x28, 0x8d, 0x9c, 0x61, 0x06, 0xf9, 0x0b, 0x5c, 0x9f, 0xc6, 0x6b,
	0xf6, 0x78, 0x2c, 0x14, 0xb8, 0x42, 0x37, 0xbe, 0xd0, 0xa9, 0xcd, 0xb7, 0x7b, 0x5d, 0xbf, 0x33,
	0x6d, 0xd4, 0xf4, 0x59, 0x4a, 0x55, 0x7d, 0xa8, 0xbe, 0x57, 0x43, 0x35, 0x76, 0xdd, 0xd2, 0xdd,
	0xfd, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0x19, 0x20, 0xe8, 0xac, 0x89, 0x01, 0x00, 0x00,
}
