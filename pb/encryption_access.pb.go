// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: encryption_access.proto

package pb

import (
	proto "github.com/gogo/protobuf/proto"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EncryptionAccess struct {
	DefaultKey                  []byte                         `protobuf:"bytes,1,opt,name=default_key,json=defaultKey,proto3" json:"default_key,omitempty"`
	StoreEntries                []*EncryptionAccess_StoreEntry `protobuf:"bytes,2,rep,name=store_entries,json=storeEntries,proto3" json:"store_entries,omitempty"`
	DefaultPathCipher           CipherSuite                    `protobuf:"varint,3,opt,name=default_path_cipher,json=defaultPathCipher,proto3,enum=encryption.CipherSuite" json:"default_path_cipher,omitempty"`
	DefaultMetadataCipher       CipherSuite                    `protobuf:"varint,5,opt,name=default_metadata_cipher,json=defaultMetadataCipher,proto3,enum=encryption.CipherSuite" json:"default_metadata_cipher,omitempty"`
	DefaultEncryptionParameters *EncryptionParameters          `protobuf:"bytes,4,opt,name=default_encryption_parameters,json=defaultEncryptionParameters,proto3" json:"default_encryption_parameters,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                       `json:"-"`
	XXX_unrecognized            []byte                         `json:"-"`
	XXX_sizecache               int32                          `json:"-"`
}

func (m *EncryptionAccess) Reset()         { *m = EncryptionAccess{} }
func (m *EncryptionAccess) String() string { return proto.CompactTextString(m) }
func (*EncryptionAccess) ProtoMessage()    {}

func (m *EncryptionAccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptionAccess.Unmarshal(m, b)
}
func (m *EncryptionAccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptionAccess.Marshal(b, m, deterministic)
}
func (m *EncryptionAccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptionAccess.Merge(m, src)
}
func (m *EncryptionAccess) XXX_Size() int {
	return xxx_messageInfo_EncryptionAccess.Size(m)
}
func (m *EncryptionAccess) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptionAccess.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptionAccess proto.InternalMessageInfo

func (m *EncryptionAccess) GetDefaultKey() []byte {
	if m != nil {
		return m.DefaultKey
	}
	return nil
}

func (m *EncryptionAccess) GetStoreEntries() []*EncryptionAccess_StoreEntry {
	if m != nil {
		return m.StoreEntries
	}
	return nil
}

func (m *EncryptionAccess) GetDefaultPathCipher() CipherSuite {
	if m != nil {
		return m.DefaultPathCipher
	}
	return CipherSuite_ENC_UNSPECIFIED
}

func (m *EncryptionAccess) GetDefaultMetadataCipher() CipherSuite {
	if m != nil {
		return m.DefaultMetadataCipher
	}
	return CipherSuite_ENC_UNSPECIFIED
}

func (m *EncryptionAccess) GetDefaultEncryptionParameters() *EncryptionParameters {
	if m != nil {
		return m.DefaultEncryptionParameters
	}
	return nil
}

type EncryptionAccess_StoreEntry struct {
	Bucket               []byte                `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	UnencryptedPath      []byte                `protobuf:"bytes,2,opt,name=unencrypted_path,json=unencryptedPath,proto3" json:"unencrypted_path,omitempty"`
	EncryptedPath        []byte                `protobuf:"bytes,3,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	Key                  []byte                `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	PathCipher           CipherSuite           `protobuf:"varint,5,opt,name=path_cipher,json=pathCipher,proto3,enum=encryption.CipherSuite" json:"path_cipher,omitempty"`
	MetadataCipher       CipherSuite           `protobuf:"varint,7,opt,name=metadata_cipher,json=metadataCipher,proto3,enum=encryption.CipherSuite" json:"metadata_cipher,omitempty"`
	EncryptionParameters *EncryptionParameters `protobuf:"bytes,6,opt,name=encryption_parameters,json=encryptionParameters,proto3" json:"encryption_parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EncryptionAccess_StoreEntry) Reset()         { *m = EncryptionAccess_StoreEntry{} }
func (m *EncryptionAccess_StoreEntry) String() string { return proto.CompactTextString(m) }
func (*EncryptionAccess_StoreEntry) ProtoMessage()    {}

func (m *EncryptionAccess_StoreEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptionAccess_StoreEntry.Unmarshal(m, b)
}
func (m *EncryptionAccess_StoreEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptionAccess_StoreEntry.Marshal(b, m, deterministic)
}
func (m *EncryptionAccess_StoreEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptionAccess_StoreEntry.Merge(m, src)
}
func (m *EncryptionAccess_StoreEntry) XXX_Size() int {
	return xxx_messageInfo_EncryptionAccess_StoreEntry.Size(m)
}
func (m *EncryptionAccess_StoreEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptionAccess_StoreEntry.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptionAccess_StoreEntry proto.InternalMessageInfo

func (m *EncryptionAccess_StoreEntry) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *EncryptionAccess_StoreEntry) GetUnencryptedPath() []byte {
	if m != nil {
		return m.UnencryptedPath
	}
	return nil
}

func (m *EncryptionAccess_StoreEntry) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *EncryptionAccess_StoreEntry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *EncryptionAccess_StoreEntry) GetPathCipher() CipherSuite {
	if m != nil {
		return m.PathCipher
	}
	return CipherSuite_ENC_UNSPECIFIED
}

func (m *EncryptionAccess_StoreEntry) GetMetadataCipher() CipherSuite {
	if m != nil {
		return m.MetadataCipher
	}
	return CipherSuite_ENC_UNSPECIFIED
}

func (m *EncryptionAccess_StoreEntry) GetEncryptionParameters() *EncryptionParameters {
	if m != nil {
		return m.EncryptionParameters
	}
	return nil
}
